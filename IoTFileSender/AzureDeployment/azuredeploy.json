{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceName": {
      "defaultValue": "MyService",
      "type":  "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [ "Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS" ]
    },
      "_artifactsLocation": {
          "type": "string"
      },
      "_artifactsLocationSasToken": {
          "type": "securestring"
      },
    "UncompressFunctionPackageFolder": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "FileProcessorFunction",
      "metadata": {
        "description": "WebDeploy package location. This path is relative to the _artifactsLocation parameter"
      }
    },
    "UncompressFunctionPackageFileName": {
      "type": "string",
      "defaultValue": "package.zip",
      "minLength": 1,
      "metadata": {
        "description": "Name of the webdeploy package"
      }
    }
  },
  "variables": {
    "sites_FileProcessor_name": "[substring(concat(parameters('serviceName'),'FileProcessor',uniquestring(resourceGroup().id), '0000000000'),0,24)]",
    "StreamingAnalyticsName": "[substring(concat(parameters('serviceName'),'FileAnalyzer',uniquestring(resourceGroup().id), '0000000000'),0,24)]",
    "blobStorageAnalytics": "[substring(toLower(concat(parameters('serviceName'), 'str', uniquestring(resourceGroup().id), '0000000000')), 0, 24)]",
    "serverfarms_plan_name": "[concat(parameters('serviceName'),'ServerFarm',resourceGroup().location,'Plan')]",
    "storageAccountFunctionsName": "[substring(toLower(concat(parameters('serviceName'),'FnLogs',uniquestring(resourceGroup().id), '0000000000')),0,24)]",
    "storageAccountFileStorageName": "[substring(toLower(concat(parameters('serviceName'),'Storage',uniquestring(resourceGroup().id), '0000000000')),0,24)]",
    "fileAnalyzerQuery": "with curvas as (SELECT\n    REF,TRY_CAST(tiempo1Carrera as float) tiempo,\n    TRY_CAST(Diferenciadepresion as float) difpres,\n    DATEADD(ms,TRY_CAST(tiempo1Carrera as float), EventProcessedUtcTime) timestamp_t,\n    TRY_CAST(presionp2 as float) presionp2,\n    TRY_CAST(contrapresion as float) contrapresion,\n    TRY_CAST(canal5 as float) canal5,\n    TRY_CAST(canal6 as float) canal6,\n    TRY_CAST(canal7 as float) canal7,\n    TRY_CAST(canal8 as float) canal8,\n    TRY_CAST(presionp1 as float) presionp1\nFROM\n    input\ntimestamp by DATEADD(ms,TRY_CAST(tiempo1Carrera as float), EventProcessedUtcTime)\n    )\nselect * from curvas"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccountFileStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "name": "[variables('StreamingAnalyticsName')]",
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-09-01",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "inputs": [
          {
            "name": "input",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "CSV",
                "properties": {
                  "fieldDelimiter": ";",
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[variables('storageAccountFileStorageName')]",
                      "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFileStorageName')), '2015-06-15').key1]"
                    }
                  ],
                  "container": "output-files",
                  "pathPattern": ""
                }

              }
            }
          }
        ],
        "transformation": {
          "name": "[variables('StreamingAnalyticsName')]",
          "properties": {
            "streamingUnits": 1,
            "query": "[variables('fileAnalyzerQuery')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFileStorageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccountFunctionsName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[variables('serverfarms_plan_name')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('serverfarms_plan_name')]",
        "numberOfWorkers": 0
      },
      "resources": [],
      "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFunctionsName'))]" ]
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('sites_FileProcessor_name')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('sites_FileProcessor_name')]",
        "hostNames": [
          "[concat(variables('sites_FileProcessor_name'),'.azurewebsites.net')]"
        ],
        "enabledHostNames": [
          "[concat(variables('sites_FileProcessor_name'),'azurewebsites.net')]",
          "[concat(variables('sites_FileProcessor_name'),'.scm.azurewebsites.net')]"
        ],
        "hostNameSslStates": [
          {
            "name": "[concat(variables('sites_FileProcessor_name'),'fileprocessor.azurewebsites.net')]",
            "sslState": 0,
            "thumbprint": null,
            "ipBasedSslState": 0
          },
          {
            "name": "[concat(variables('sites_FileProcessor_name'),'fileprocessor.scm.azurewebsites.net')]",
            "sslState": 0,
            "thumbprint": null,
            "ipBasedSslState": 0
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_plan_name'))]"
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('sites_FileProcessor_name'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFunctionsName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFileStorageName'))]",
            "[concat('Microsoft.Web/Sites/', variables('sites_FileProcessor_name'), '/Extensions/MSDeploy')]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountFunctionsName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFunctionsName')), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountFunctionsName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFunctionsName')), '2015-05-01-preview').key1,';')]",
            "Files_STORAGE": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountFileStorageName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFileStorageName')), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "latest"
          }
        },
          {
              "name": "MSDeploy",
              "type": "extensions",
              "location": "[resourceGroup().location]",
              "apiVersion": "2015-08-01",
              "dependsOn": [
                  "[resourceId('Microsoft.Web/sites', variables('sites_FileProcessor_name'))]"
              ],
              "tags": {
                  "displayName": "UncompressFunction"
              },
              "properties": {
                  "packageUri": "[concat(parameters('_artifactsLocation'), '/', parameters('UncompressFunctionPackageFolder'), '/', parameters('UncompressFunctionPackageFileName'), parameters('_artifactsLocationSasToken'))]",
                  "dbType": "None",
                  "connectionString": "",
                  "setParameters": {
                      "IIS Web Application Name": "[variables('sites_FileProcessor_name')]"
                  }
              }
          }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_plan_name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFunctionsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountFileStorageName'))]"
      ]
    }
  ]
}